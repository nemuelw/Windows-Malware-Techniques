// Author: Nemuel Wainaina

#include <iostream>
#include <windows.h>

HWND nextClipboardViewer;

LRESULT __stdcall ClipboardViewerProc(HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam) {
    switch(msg) {
        case WM_DRAWCLIPBOARD: {
            if(OpenClipboard(hWnd)) {
                HANDLE clipboardData = GetClipboardData(CF_TEXT);
                if(clipboardData != NULL) {
                    char* clipboardText = static_cast<char*>(GlobalLock(clipboardData));
                    if(clipboardText != NULL) {
                        std::cout << clipboardText << std::endl;
                    }
                    GlobalUnlock(clipboardData);
                }
                CloseClipboard();
            }
            SendMessage(nextClipboardViewer, msg, wParam, lParam);
            break;
        }
        case WM_CHANGECBCHAIN: {
            if((HWND)wParam == nextClipboardViewer) {
                nextClipboardViewer = (HWND)lParam;
            } else {
                SendMessage(nextClipboardViewer, msg, wParam, lParam);
            }
            break;
        }
        default:
            return DefWindowProc(hWnd, msg, wParam, lParam);
    }

    return 0;
}

int main() {
    WNDCLASSW wc = {};
    wc.lpfnWndProc = ClipboardViewerProc;
    wc.hInstance = GetModuleHandle(NULL);
    wc.lpszClassName = L"ClipboardViewer";
    RegisterClassW(&wc);

    HWND hWndViewer = CreateWindowExW(
        0, L"ClipboardViewer", L"Clipboard Viewer",
        0, 0, 0, 0, 0, HWND_MESSAGE, NULL, GetModuleHandle(NULL), NULL);
    nextClipboardViewer = SetClipboardViewer(hWndViewer);

    MSG msg;
    while(GetMessage(&msg, NULL, 0, 0)) {
        TranslateMessage(&msg);
        DispatchMessage(&msg);
    }

    ChangeClipboardChain(hWndViewer, nextClipboardViewer);
    DestroyWindow(hWndViewer);
    return 0;
}
