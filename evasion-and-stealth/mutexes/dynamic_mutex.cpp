// Author: Nemuel Wainaina

#include <iostream>
#include <lmcons.h>
#include <windows.h>

int payload() {
    MessageBoxW(NULL, L"Payload executed", L"Alert", MB_OK);
}

std::wstring generateMutexName() {
    // get the username
    wchar_t username[UNLEN + 1];
    DWORD usernameLen = UNLEN + 1;
    GetUserNameW(username, &usernameLen);

    // get machine name
    wchar_t computerName[MAX_COMPUTERNAME_LENGTH + 1];
    DWORD computerNameLen = MAX_COMPUTERNAME_LENGTH + 1;
    GetComputerNameW(computerName, &computerNameLen);

    return std::wstring(username) + L"_" + std::wstring(computerName);
}

int main() {
    HANDLE hMutex = CreateMutexW(NULL, FALSE, generateMutexName().c_str());

    if(hMutex && GetLastError() == ERROR_ALREADY_EXISTS) {
        std::cout << "Another instance is already running. Quitting ..." << std::endl;
        CloseHandle(hMutex);
        return 0;
    }

    payload();
    CloseHandle(hMutex);
    return 0;
}
